name: Build Python Wheel

on:
  workflow_dispatch:
  push:
    branches:
      - main  # or your default branch

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    environment: databricks
  
    defaults:
      run:
        working-directory: test
    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Clean previous builds
        run: |
          rm -rf dist build *.egg-info

      - name: Install packaging tools
        run: |
          python -m pip install --upgrade pip build wheel setuptools

      - name: Build wheel (prefers pyproject.toml)
        run: |
          if [ -f "pyproject.toml" ]; then
            python -m build --wheel
          elif [ -f "setup.py" ]; then
            python setup.py bdist_wheel
          else
            echo "No setup.py or pyproject.toml found!" && exit 1
          fi

      - name: List whl files created
        run: ls -lh dist/

      - name: Install Databricks CLI
        run: pip install databricks-cli
      
      - name: Get wheel filename
        id: get_wheel
        run: |
          WHEEL_FILE=$(ls dist/*.whl)
          echo "wheel_file=$WHEEL_FILE" >> $GITHUB_OUTPUT
      
      - name: Install Databricks CLI
        run: pip install databricks-cli
      
      - name: Upload wheel to Databricks DBFS
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          #databricks current-user me
          echo "Uploading ${{ steps.get_wheel.outputs.wheel_file }}"
          #databricks fs cp "${{ steps.get_wheel.outputs.wheel_file }}" dbfs:/FileStore/wheels/$(basename ${{ steps.get_wheel.outputs.wheel_file }}) --overwrite

